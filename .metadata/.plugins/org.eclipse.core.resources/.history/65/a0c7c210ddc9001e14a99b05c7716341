package com.algaworks.algafood.domain.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.algaworks.algafood.domain.exception.CidadeNaoEncontradaException;
import com.algaworks.algafood.domain.exception.EntidadeEmUsoException;
import com.algaworks.algafood.domain.model.Cidade;
import com.algaworks.algafood.domain.model.Estado;
import com.algaworks.algafood.domain.model.Grupo;
import com.algaworks.algafood.domain.repository.GrupoRepository;


@Service
public class CadastroGrupoService {
	
	private static final String MSG_CIDADE_EM_USO 
	= "Cidade de código %d não pode ser removida, pois está em uso";

    @Autowired
    private GrupoRepository grupoRepository;
    
    
    
    public List<Grupo> listar(){
    	return grupoRepository.findAll();
    }
    
    public Grupo buscar(Long id) {
    	return grupoRepository.findById(id).get();
    }
    
	public Grupo buscarOuFalhar(Long cidadeId) {
		return grupoRepository.findById(cidadeId)
			.orElseThrow(() -> new CidadeNaoEncontradaException(cidadeId));
	}
    
    @Transactional
    public Grupo salvar(Grupo cidade) {
        
    	Long estadoId = cidade.getEstado().getId();
        Estado estado = cadastroEstadoService.buscarOuFalhar(estadoId);     
        cidade.setEstado(estado);
        
        return grupoRepository.save(cidade);
    }
    
    @Transactional
    public void excluir(Long cidadeId) {
        try {
            cidadeRepository.deleteById(cidadeId); 
            cidadeRepository.flush(); //forçar operações do BD p/ não pular exceção
        } catch (EmptyResultDataAccessException e) {
            throw new CidadeNaoEncontradaException(cidadeId);
        
        } catch (DataIntegrityViolationException e) {
            throw new EntidadeEmUsoException(
                String.format(MSG_CIDADE_EM_USO, cidadeId));
        }
    }
    
}
